name: Docker

on:
  push:
    branches:
      - master    # Will be `dev`
    tags:
      - v*        # Publish `v1.2.3` tags as releases.

  pull_request:   # Run tests for any PRs.


jobs:
  test:           # See also https://docs.docker.com/docker-hub/builds/automated-testing/
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Run tests
        run: |
          if [ -f docker-compose.test.yml ]; then
            docker-compose --file docker-compose.test.yml build
            docker-compose --file docker-compose.test.yml run sut
          else
            docker build --build-arg OS="debian:bullseye-slim" --file Dockerfile .
          fi

  build:
    runs-on: ubuntu-latest

    needs: test   # Ensure test job passes before pushing image.
    if: github.event_name == 'push'
    permissions:
      contents: read
      packages: write

    strategy:
      matrix:
        os: [bookworm-slim, bookworm, bullseye-slim, bullseye]
        include:
        - os: bookworm-slim
          image: debian:bookworm-slim
        - os: bookworm
          image: debian:bookworm
        - os: bullseye-slim
          image: debian:bullseye-slim
        - os: bullseye
          image: debian:bullseye

    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Dockerhub Login
        uses: docker/login-action@v1.10.0
        with:
          username: max06net
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: max06net/base-gui
          tags: |
            type=semver,pattern={{version}}-${{ matrix.os }}
            type=semver,pattern={{major}}.{{minor}}-${{ matrix.os }}
            type=semver,pattern={{major}}-${{ matrix.os }}
            type=edge,branch=master,suffix=-${{ matrix.os }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v4
        with:
          build-args: |
            OS=${{ !matrix.image && matrix.os || matrix.image }}
          # platforms: # optional
          pull: true
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
        # env:
        #   OS: ${{ matrix.os }}
